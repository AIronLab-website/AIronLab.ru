import type { Metadata } from 'next';
import Script from 'next/script';
import { BlogHeader } from '@/components/layout/BlogHeader';
import { LightFooter } from '@/components/layout/LightFooter';
import { ShareButton } from '@/components/ui/ShareButton';
import {
  PostHero,
  TableOfContents,
  ReadingProgress,
  AuthorSection,
  InfoCallout,
  ShareBar,
  BookmarkButton,
  RelatedPosts,
  CommentsSection,
} from '@/components/sections/blog';
import { mockBlogPosts, mockFullBlogPost } from '@/lib/mockBlogData';
import { notFound } from 'next/navigation';

// Mock function to convert preview to full post
// TODO: Replace with actual CMS/API call
function getFullPost(slug: string) {
  // For now, return mockFullBlogPost for any slug
  // In production, this should fetch from CMS
  const preview = mockBlogPosts.find(p => p.slug === slug);
  if (!preview) return null;
  
  // Return full blog post with content
  return {
    ...mockFullBlogPost,
    ...preview,
  };
}

// Old blog posts data (keeping for backward compatibility)
const oldBlogPosts = [
  {
    id: '6',
    title: '5 ошибок при выборе ИИ-решения, которые стоят бизнесу миллионы',
    excerpt: 'Исследование MIT показало: 95% проектов по внедрению ИИ не оправдывают ожиданий. Рассказываем, как не стать частью этой статистики и избежать потерь от 500 тысяч до 5 миллионов рублей.',
    content: `
      <p><i>Исследование MIT показало: 95% проектов по внедрению ИИ не оправдывают ожиданий. Рассказываем, как не стать частью этой статистики.</i></p>

      <hr>

      <p>42% компаний полностью отказались от своих ИИ-инициатив в 2025 году — это рост в 2,5 раза за год. Проблема не в технологии, а в подходе к внедрению.</p>

      <p>Средняя стоимость неудачного ИИ-проекта для малого и среднего бизнеса — от 500 тысяч до 5 миллионов рублей. Вот пять главных ошибок, которые приводят к таким потерям.</p>

      <h2>Ошибка №1: Покупать технологию вместо решения проблемы</h2>

      <p>85% компаний выбирают ИИ по принципу «что умеет», а не «что решает». Результат — дорогие системы, которыми никто не пользуется.</p>

      <p><b>Типичные примеры:</b></p>

      <ul>
        <li>Система компьютерного зрения в магазине, когда проблема в скорости работы кассиров</li>
        <li>Предиктивная аналитика на производстве, когда 80% простоев из-за пропущенного ТО</li>
        <li>CRM с ИИ-аналитикой, когда менеджеры не могут найти контакты клиентов</li>
      </ul>

      <p><b>Как делать правильно:</b></p>

      <ol>
        <li>Опросите сотрудников — что отнимает больше всего времени?</li>
        <li>Посчитайте стоимость проблемы в рублях</li>
        <li>Найдите простейшее решение для 80% случаев</li>
        <li>Только потом ищите подходящий ИИ-инструмент</li>
      </ol>

      <p><b>Правило:</b> Если не можете объяснить в одном предложении, какую проблему решаете и сколько это сэкономит — не покупайте.</p>

      <h2>Ошибка №2: Игнорировать качество данных</h2>

      <p>42% ИИ-проектов проваливаются из-за плохих данных. «Мусор на входе — мусор на выходе».</p>

      <p><b>Типичные проблемы МСБ:</b></p>

      <ul>
        <li>Клиенты в Excel, продажи в 1С, склад в третьей программе</li>
        <li>База не обновлялась 2 года, треть телефонов неактуальна</li>
        <li>Менеджеры по-разному записывают названия и имена</li>
        <li>Нет истории данных для обучения алгоритмов</li>
      </ul>

      <p><b>Что делать до покупки ИИ:</b></p>

      <ul>
        <li>Проведите аудит данных — что есть, насколько актуально</li>
        <li>Стандартизируйте правила ввода информации</li>
        <li>Очистите базу от дублей и ошибок</li>
        <li>Настройте автоматическую загрузку из разных систем</li>
      </ul>

      <p><b>Простое правило:</b> Если данными нельзя пользоваться для решений прямо сейчас — ИИ тоже не поможет.</p>

      <h2>Ошибка №3: Экономить на экспертизе или переплачивать за неё</h2>

      <p>Рынок ИИ-специалистов перегрет — зарплаты выросли на 51% за год. Компании мечутся между крайностями: поручают ИИ обычным программистам или нанимают PhD за миллионы.</p>

      <p><b>Обе крайности дорого обходятся:</b></p>

      <ul>
        <li>Веб-разработчик настраивает чатбот → бот отвечает невпопад</li>
        <li>PhD создаёт систему учёта → технически совершенно, практически бесполезно</li>
      </ul>

      <p><b>Оптимальная стратегия для МСБ:</b></p>

      <ul>
        <li>Внешний консультант на этапе выбора решения</li>
        <li>Готовые решения вместо разработки с нуля (90% задач МСБ — типовые)</li>
        <li>Обучение существующих сотрудников работе с ИИ</li>
        <li>Поставщики с поддержкой и обучением</li>
      </ul>

      <p><b>Золотая середина:</b> Экспертиза в предметной области + базовое понимание ИИ.</p>

      <h2>Ошибка №4: Недооценивать интеграцию</h2>

      <p>46% компаний сталкиваются с проблемами интеграции. Gartner: оценки стоимости ИИ-проектов ошибаются на 500-1000% именно из-за интеграции.</p>

      <p><b>Частые проблемы МСБ:</b></p>

      <ul>
        <li>Нет готовых модулей для 1С</li>
        <li>Решение не может обмениваться данными с вашими системами</li>
        <li>ИТ-отдел блокирует из-за безопасности</li>
        <li>Сотрудники сопротивляются изменениям</li>
      </ul>

      <p><b>Как избежать:</b></p>

      <ul>
        <li>Составьте карту всех используемых систем</li>
        <li>Включите требования к интеграции в ТЗ</li>
        <li>Проверьте интеграцию на пилоте</li>
        <li>Подготовьте сотрудников к изменениям</li>
      </ul>

      <p><b>Важно:</b> Интеграция — основа архитектуры, а не доработка в конце.</p>

      <h2>Ошибка №5: Не определить критерии успеха</h2>

      <p>95% компаний не имеют чётких метрик ROI для ИИ. Без понимания успеха невозможно оценить эффективность.</p>

      <p><b>Типичные проблемы:</b></p>

      <ul>
        <li>Размытые цели: «повысить эффективность» вместо конкретных цифр</li>
        <li>Фокус на технических метриках: точность 94% ≠ польза для бизнеса</li>
        <li>Нет данных «до внедрения» для сравнения</li>
        <li>Не учитывают побочные эффекты</li>
      </ul>

      <p><b>Примеры правильных метрик:</b></p>

      <ul>
        <li>Интернет-магазин: рост конверсии рекомендаций с 2% до 5%</li>
        <li>Производство: простой оборудования с 8% до 4%</li>
        <li>Услуги: время ответа клиентам с 4 часов до 1 часа</li>
      </ul>

      <p><b>Формула метрики:</b> Конкретный показатель + целевое значение + срок достижения.</p>

      <h2>Практические рекомендации</h2>

      <h3>Бюджеты для МСБ:</h3>

      <p><b>Малый бизнес (до 50 человек):</b></p>

      <ul>
        <li>SaaS-решения: 10-50 тыс. руб/мес</li>
        <li>Внедрение: 100-300 тыс. руб</li>
        <li>Обучение: 50-150 тыс. руб</li>
      </ul>

      <p><b>Средний бизнес (50-250 человек):</b></p>

      <ul>
        <li>Кастомные решения: 0,5-2 млн руб</li>
        <li>Интеграция: 200-800 тыс. руб</li>
        <li>Поддержка: 50-200 тыс. руб/год</li>
      </ul>

      <p><b>Золотое правило бюджета:</b> 50% на внедрение, 30% на решение, 20% резерв.</p>

      <h2>Заключение</h2>

      <p>Успешное внедрение ИИ — это марафон, не спринт. Компании, избегающие этих ошибок, получают ROI 250-400% за первый год.</p>

      <p><b>Главные принципы:</b></p>

      <ol>
        <li>Решайте проблемы, не внедряйте технологии</li>
        <li>Готовьте данные и процессы заранее</li>
        <li>Выбирайте готовые решения</li>
        <li>Планируйте интеграцию с самого начала</li>
        <li>Измеряйте успех в деньгах</li>
      </ol>

      <p>ИИ — инструмент для решения задач, не самоцель. Правильный выбор даёт конкурентные преимущества, неправильный — дорого обходится.</p>

      <hr>

      <p><b>Планируете внедрить ИИ?</b> Поможем выбрать оптимальное решение и избежать дорогостоящих ошибок.</p>

      <p><a href="/#contact" className="text-blue-600 hover:text-blue-800 underline"><b>Получить консультацию →</b></a></p>
    `,
    author: 'Александр Гребенщиков',
    date: '2025-08-28',
    readTime: '8 мин',
    tags: ['ИИ-решения', 'Бизнес'],
    image: '/images/blog/ChatGPT Image 28 авг. 2025 г., 00_25_42.png',
    slug: 'ai-implementation-mistakes'
  },
  {
    id: '5',
    title: 'Как 5 ИИ-агентов за 4 дня создали вирусный face-swap бот для избирательной кампании',
    excerpt: 'Рассказываем, как команда искусственного интеллекта разработала telegram-бота с технологией замены лиц, который превращает фото пользователей в персональные мемы-стикеры за 3 минуты',
    content: `
      <p>В июле к нам обратилась партия "Новые люди" с нестандартной задачей: нужен был инструмент для предвыборной кампании, который бы не просто информировал избирателей, а создавал эмоциональную связь через персонализированный контент. Идея — telegram-бот, который превращает селфи пользователей в мемы-стикеры.</p>

      <p>Казалось бы, типовая задача для нас. Но мы решили поэкспериментировать и поручить весь процесс разработки команде из 5 специализированных ИИ-агентов. Результат превзошел ожидания: готовый продукт за неделю вместо месяца, 10 000+ строк качественного кода и 50+ пользователей в первые сутки после запуска ⚡</p>

      <h2>Вызов: политика + вирусность + технологическая сложность</h2>

      <p><b>Проблема клиента</b>: Как в условиях информационного шума привлечь внимание молодой аудитории к политической партии? Стандартные баннеры и листовки не работают, нужен интерактивный инструмент, который сам пользователь захочет попробовать и поделиться результатом.</p>

      <p><b>Техническая сложность</b>: Face-swap технологии требуют в первую очередь качественной обработки изображений. При этом всё должно работать быстро, в рамках telegram-бота, без установки дополнительных приложений.</p>

      <p><b>Ограничения по времени</b>: До выборов оставалось чуть больше месяца, классическая разработка заняла бы 3-4 недели только на программирование, не считая планирования и тестирования.</p>

      <p>Именно тогда мы решили протестировать нашу экспериментальную систему — команду ИИ-агентов, каждый из которых специализируется на определённом этапе разработки.</p>

      <h2>💻 Решение: делегируем разработку искусственному интеллекту</h2>

      <h2>Архитектура ИИ-команды</h2>

      <div className="mb-8">
        <img src="/images/blog/ChatGPT Image 25 авг. 2025 г., 15_43_30.png" alt="Архитектура ИИ-команды" className="w-full rounded-lg shadow-lg" />
      </div>

      <p>Мы создали 5 специализированных агентов:</p>

      <ol>
        <li><b>Product manager</b> — анализирует требования и планирует техническую архитектуру</li>
        <li><b>Backend developer</b> — пишет код на Node.js, интегрирует API</li>
        <li><b>QA-developer</b> — создаёт тесты и проверяет работоспособность</li>
        <li><b>Analyst agent</b> — проектирует систему сбора метрик и аналитики</li>
        <li><b>Project-manager</b> — создает план проекта, задачи и контролирует их выполнение</li>
      </ol>

      <p>Каждый агент работает автономно, но синхронизируется с остальными через общую базу знаний проекта.</p>

      <h2>⚙ Технический стек</h2>

      <p><b>Backend</b>: Node.js + Express.js для обработки webhook'ов от Telegram<br>
      <b>AI Engine</b>: Piapi AI для face-swap технологии (выбрали за скорость обработки и качество результата)<br>
      <b>База данных</b>: SupaBase для хранения пользователей, метрик и истории операций<br>
      <b>Telegram Bot API</b>: для взаимодействия с пользователями и автоматического создания стикер-паков<br>
      <b>Инфраструктура</b>: Docker-контейнеры на Railway с автоматическим масштабированием</p>

      <h2>Как это работает с точки зрения пользователя</h2>

      <ol>
        <li>Пользователь присылает селфи в бота @NewPeopleStickers_bot</li>
        <li>Бот предлагает выбрать шаблон (мем с политиком или актуальная картинка)</li>
        <li>ИИ обрабатывает фото: извлекает лицо, адаптирует под шаблон, накладывает</li>
        <li>За ~3 минуты готов персональный стикер-пак из 12 изображений</li>
        <li>Бот автоматически создаёт стикер-пак в Telegram и отправляет ссылку пользователю</li>
      </ol>



      <h2>Процесс разработки: как ИИ-агенты работают в команде</h2>

      <h3>День 1: Планирование и архитектура</h3>

      <p><b>Product-manager</b> проанализировал техническое задание и предложил микросервисную архитектуру:</p>

      <ul>
        <li>Основной сервис для обработки telegram-запросов</li>
        <li>Отдельный сервис для ИИ-обработки изображений</li>
        <li>Сервис аналитики и метрик</li>
        <li>База данных для пользователей и логов</li>
      </ul>

      <p><b>Неожиданный инсайт</b>: агент самостоятельно предложил систему очередей для обработки изображений, чтобы избежать перегрузки при вирусном росте аудитории. Это решение мы не закладывали в первоначальные требования.</p>

      <h3>День 2: Разработка core-функционала</h3>

      <p><b>Backend developer</b> начал писать код, параллельно <b>QA developer</b> создавал автотесты.</p>

      <p>Интересный момент: агенты "спорили" друг с другом. Программист предложил хранить временные файлы на диске, тестировщик возразил, что это создаст проблемы при масштабировании, и предложил использовать in-memory обработку. В итоге выбрали гибридный подход.</p>

      <p><b>Результат дня</b>: работающий прототип с базовым функционалом face-swap.</p>

      <h3>День 3: Интеграции и оптимизация</h3>

      <p><b>Analyst agent</b> спроектировал систему метрик: отслеживание конверсии (от фото до готового стикера), популярности шаблонов, географии пользователей.</p>

      <p><b>Project manager</b> создал подробную документацию API и инструкции по развертыванию.</p>

      <p>Параллельно программист оптимизировал скорость обработки: удалось сократить время генерации стикера с 5-6 минут до ~3 минут.</p>

      <h3>День 4: Тестирование и деплой</h3>

      <p>Финальное тестирование показало стабильную работу при нагрузке до 100 одновременных пользователей. Развернули на продакшн-серверах с мониторингом.</p>

      <h2>📊 Результаты: цифры и инсайты</h2>

      <h3>Технические метрики</h3>

      <ul>
        <li><b>10 000 строк кода</b> — написано ИИ-агентами с минимальным участием человека 🤖</li>
        <li><b>Время разработки</b>: 4 дня против планируемых 3 недель (сокращение в 5 раз) ⏰</li>
        <li><b>Скорость обработки</b>: 3 минуты на создание стикер-пака из 12 изображений ⚡</li>
        <li><b>Покрытие тестами</b>: 31% кода покрыто автотестами ✅</li>
      </ul>

      <div className="mb-8">
        <img src="/images/blog/Снимок экрана 2025-08-21 в 14.23.02.png" alt="Результаты проекта" className="w-3/4 mx-auto rounded-lg shadow-lg" />
      </div>

      <h3>Пользовательские метрики (первая неделя)</h3>

      <ul>
        <li><b>50+ пользователей</b> в первые 24 часа после запуска 🚀</li>
        <li><b>300+ стикер-паков</b> создано за первую неделю 🎨</li>
        <li><b>100% conversion rate</b> — от загрузки фото до создания стикера 📈</li>
        <li><b>40% viral coefficient</b> — пользователи делились ботом в среднем с 2-3 друзьями 📱</li>
      </ul>

      <h3>Качественные результаты</h3>

      <p><b>Для клиента</b>: получили готовый инструмент viral-маркетинга, который работает полностью автономно. Партия использовала метрики бота для анализа географии и демографии аудитории.</p>

      <p><b>Для нас</b>: доказали работоспособность концепции ИИ-команды разработчиков. Сейчас применяем этот подход в коммерческих проектах.</p>

      <p><b>Для индустрии</b>: показали, что сложные технические проекты можно создавать силами ИИ при правильной организации процесса.</p>

      <h2>🔍 Технические инсайты и подводные камни</h2>

      <h3>Что сработало отлично ✅</h3>

      <p><b>1. Модульная архитектура от ИИ оказалась лучше классической</b> Агент-архитектор изначально спроектировал систему как набор независимых микросервисов. Это позволило легко масштабировать компонент обработки изображений при росте нагрузки.</p>

      <p><b>2. Автоматическое тестирование экономит недели</b> ИИ-тестировщик создал 200+ тест-кейсов, включая edge cases, о которых мы даже не думали. Например, тесты на обработку фото с несколькими лицами или без лиц вообще.</p>

      <p><b>3. Качество кода выше ожидаемого</b> Агенты писали код с подробными комментариями, следовали принципам SOLID, использовали современные паттерны Node.js.</p>

      <h3>Проблемы, с которыми столкнулись ⚠</h3>

      <p><b>1. Координация между агентами</b> Первые дни агенты "не понимали" друг друга — программист писал API, которые не соответствовали ожиданиям тестировщика. Решили через подробный shared context и ежедневные "синхронизации".</p>

      <p><b>2. Специфика face-swap технологий</b> API Piapi AI иногда выдавал неожиданные результаты на нестандартных фото. Пришлось добавить предварительную обработку изображений и фильтрацию.</p>

      <p><b>3. Нагрузка на Telegram Bot API</b> При создании стикер-паков оказались лимиты Telegram API. Решили через батчинг и асинхронную обработку.</p>

      <h2>💡 Уроки для бизнеса: когда ИИ-разработка оправдана</h2>

      <h3>Когда стоит использовать ИИ-команды</h3>

      <ul>
        <li>✅ <b>Проект с чёткими техническими требованиями</b> — ИИ отлично справляется, когда понятно "что делать"</li>
        <li>✅ <b>Ограниченные сроки</b> — автоматизация может сократить время в 2-4 раза</li>
        <li>✅ <b>Ограниченный бюджет</b> — автоматизация может сократить стоимость разработки в 2-4 раза</li>
        <li>✅ <b>Стандартные технологии</b> — ИИ лучше работает с популярными фреймворками и подходами</li>
        <li>✅ <b>Высокие требования к качеству кода</b> — ИИ не устаёт и следует лучшим практикам написания кода</li>
      </ul>

      <h2>🚀 Что дальше: планы по развитию ИИ-разработки</h2>

      <p>Успех проекта вдохновил на дальнейшие эксперименты. Сейчас тестируем расширенную команду из 12 агентов для более сложных проектов.</p>

      <p><b>Планируемые улучшения</b>:</p>

      <ul>
        <li><b>Design agent</b> - для создания качественного дизайна</li>
        <li><b>Design review agent</b> - для проверки и соответствии дизайна требованием проекта</li>
        <li><b>DevOps agent</b> - для автоматического развёртывания и мониторинга</li>
        <li><b>Security agent</b> - для аудита кода и поиска уязвимостей</li>
      </ul>

      <p><b>Новые направления</b>: Применяем подход к e-commerce проектам, корпоративным системам автоматизации, образовательным платформам.</p>

      <h2>✨ Выводы</h2>

      <p>Кейс с face-swap ботом показал, что ИИ-технологии уже сейчас могут кардинально ускорить разработку сложных технических продуктов. Но ключ не в замене людей, а в правильной организации взаимодействия человека и ИИ.</p>

      <p><b>Главные уроки проекта</b>:</p>

      <ol>
        <li><b>ИИ отлично справляется с рутинными задачами разработки</b>, освобождая время на стратегические решения 🎯</li>
        <li><b>Качество результата зависит от качества постановки задачи</b> — как с обычными разработчиками</li>
        <li><b>Скорость — главное преимущество ИИ-разработки</b>, особенно для MVP и экспериментальных проектов ⚡</li>
        <li><b>Координация ИИ-агентов требует новых подходов</b> к управлению проектами</li>
      </ol>

      <p>В ближайшие 2-3 года ИИ-разработка станет стандартом индустрии. Компании, которые освоят эти подходы раньше конкурентов, получат серьёзное преимущество в скорости выхода продуктов на рынок.</p>

      <p>Политическая партия получила работающий инструмент за неделю. А мы — опыт, который теперь применяем для коммерческих клиентов.</p>

      <p><i>P.S. Бот @NewPeopleStickers_bot работает — можете попробовать сами и оценить качество работы ИИ-команды.</i></p>

      <div className="mb-8 text-center">
        <img src="/images/blog/лого бот.png" alt="Логотип бота" className="w-16 h-16 mx-auto rounded-lg shadow-lg object-contain" />
      </div>

      <p><b>Попробовать face-swap бота:</b> <a href="https://t.me/NewPeopleStickers_bot" target="_blank" rel="noopener noreferrer" className="text-blue-600 hover:text-blue-800 underline">@NewPeopleStickers_bot</a><br />
      <b>Обсудить автоматизацию для вашего проекта:</b> <a href="mailto:info@aironlab.ru" className="text-blue-600 hover:text-blue-800 underline">info@aironlab.ru</a><br />
      <b>Наш Telegram канал:</b> <a href="https://tlgg.ru/@Aironlab" target="_blank" rel="noopener noreferrer" className="text-blue-600 hover:text-blue-800 underline">https://tlgg.ru/@Aironlab</a><br />
    `,
    author: 'Александр Гребенщиков',
    date: '2025-08-25',
    readTime: '12 мин',
    tags: ['Кейсы', 'Telegram'],
    image: '/images/blog/ChatGPT Image 25 авг. 2025 г., 15_43_30.png',
    slug: 'ai-agents-face-swap-bot'
  }
];

interface BlogPostPageProps {
  params: {
    slug: string;
  };
}

export async function generateMetadata({ params }: BlogPostPageProps): Promise<Metadata> {
  const post = getFullPost(params.slug);

  if (!post) {
    return {
      title: 'Статья не найдена',
    };
  }

  const siteUrl = 'https://aironlab.ru';
  const postUrl = `${siteUrl}/blog/${params.slug}`;
  const ogImage = post.seo?.ogImage || post.featuredImage?.url || `${siteUrl}/og-image.jpg`;

  return {
    title: post.seo?.metaTitle || post.title,
    description: post.seo?.metaDescription || post.excerpt,
    keywords: post.seo?.keywords,
    authors: [{ name: post.author.name, url: post.author.socialLinks?.website }],
    creator: post.author.name,
    publisher: 'AIronLab',

    // Open Graph
    openGraph: {
      type: 'article',
      url: postUrl,
      title: post.seo?.metaTitle || post.title,
      description: post.seo?.metaDescription || post.excerpt,
      siteName: 'AIronLab',
      images: [
        {
          url: ogImage,
          width: post.featuredImage?.width || 1200,
          height: post.featuredImage?.height || 630,
          alt: post.featuredImage?.alt || post.title,
        },
      ],
      locale: 'ru_RU',
      publishedTime: post.publishedAt,
      modifiedTime: post.updatedAt || post.publishedAt,
      authors: [post.author.name],
      tags: post.tags.map(tag => tag.name),
    },

    // Twitter Card
    twitter: {
      card: 'summary_large_image',
      site: '@aironlab',
      creator: post.author.socialLinks?.twitter || '@aironlab',
      title: post.seo?.metaTitle || post.title,
      description: post.seo?.metaDescription || post.excerpt,
      images: [ogImage],
    },

    // Alternates
    alternates: {
      canonical: postUrl,
    },

    // Other meta tags
    category: post.category.name,
    other: {
      'article:published_time': post.publishedAt,
      'article:modified_time': post.updatedAt || post.publishedAt,
      'article:author': post.author.name,
      'article:section': post.category.name,
      'article:tag': post.tags.map(tag => tag.name).join(', '),
    },
  };
}

export default function BlogPostPage({ params }: BlogPostPageProps) {
  const post = getFullPost(params.slug);

  if (!post) {
    notFound();
  }

  // Get current URL for structured data
  const siteUrl = 'https://aironlab.ru';
  const postUrl = `${siteUrl}/blog/${params.slug}`;
  const ogImage = post.seo?.ogImage || post.featuredImage?.url || `${siteUrl}/og-image.jpg`;

  // Structured Data (Schema.org BlogPosting)
  const structuredData = {
    '@context': 'https://schema.org',
    '@type': 'BlogPosting',
    headline: post.title,
    description: post.excerpt,
    image: ogImage,
    datePublished: post.publishedAt,
    dateModified: post.updatedAt || post.publishedAt,
    author: {
      '@type': 'Person',
      name: post.author.name,
      url: post.author.socialLinks?.website,
      jobTitle: post.author.role,
    },
    publisher: {
      '@type': 'Organization',
      name: 'AIronLab',
      url: siteUrl,
      logo: {
        '@type': 'ImageObject',
        url: `${siteUrl}/logo.png`,
      },
    },
    mainEntityOfPage: {
      '@type': 'WebPage',
      '@id': postUrl,
    },
    keywords: post.tags.map(tag => tag.name).join(', '),
    articleSection: post.category.name,
    wordCount: post.content.split(' ').length,
    inLanguage: 'ru-RU',
  };

  return (
    <>
      {/* Structured Data */}
      <Script
        id="structured-data"
        type="application/ld+json"
        dangerouslySetInnerHTML={{ __html: JSON.stringify(structuredData) }}
      />

      {/* Reading Progress Bar */}
      <ReadingProgress />

      {/* Share Bar (Desktop Floating / Mobile Sticky) */}
      <ShareBar title={post.title} excerpt={post.excerpt} url={postUrl} />

      <BlogHeader />

      <main className="min-h-screen bg-gradient-to-br from-gray-50 to-white">
        {/* Hero Header */}
        <PostHero post={post} />

        {/* Main Content with Sidebar */}
        <div className="py-16">
          <div className="container-custom">
            <div className="grid grid-cols-1 lg:grid-cols-12 gap-12">
              {/* Table of Contents - Sidebar */}
              <div className="lg:col-span-3">
                <TableOfContents content={post.content} />
              </div>

              {/* Article Content */}
              <div className="lg:col-span-9">
                <article className="prose prose-lg max-w-none" id="article-content">
                  {/* Action Buttons */}
                  <div className="mb-8 not-prose flex flex-wrap gap-4">
                    <ShareButton title={post.title} excerpt={post.excerpt} />
                    <BookmarkButton postId={post.id} postTitle={post.title} />
                  </div>

                  {/* Article Content */}
                  <div
                    className="space-y-6"
                    dangerouslySetInnerHTML={{ __html: post.content }}
                  />
                </article>

                {/* Author Section */}
                <AuthorSection author={post.author} />
              </div>
            </div>
          </div>
        </div>

        {/* Related Posts Section */}
        <RelatedPosts
          currentPost={post}
          allPosts={mockBlogPosts}
          maxPosts={3}
        />

        {/* Comments Section */}
        <CommentsSection
          postId={post.id}
          postAuthorId={post.author.id}
          allowComments={post.allowComments}
        />
      </main>

      <LightFooter />
    </>
  );
}
